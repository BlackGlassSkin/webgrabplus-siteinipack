**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: hteronet.ba
* @MinSWversion: V2.1
* @Revision 4 - [07/05/2020] doglover
* @Revision 3 - [29/03/2019] doglover
*  - URL change, Detail paginas maintenance
* @Revision 2 - [18/09/2017] Blackbear199
*  - showsplit fix
* @Revision 1 - [28/12/2016] Blackbear199
*  - channels.xml creation improvement
*  - other site fixes
* @Revision 0 - [03/04/2016] Blackbear199
*  - creation
* @Remarks: onscreen only
* @header_end
**------------------------------------------------------------------------------------------------
site {url=hteronet.ba|timezone=Europe/Sarajevo|maxdays=6|cultureinfo=bs-Latn-BA|charset=UTF-8|titlematchfactor=90}
site {ratingsystem=HR|episodesystem=onscreen|keepindexpage|retry=<retry time-out="8">3</retry>}
url_index{url ()|https://www.hteronet.ba/privatni-korisnici/programski-vodic-pg29?k=0&d=|urldate|}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
urldate.format {datestring|yyyyMMdd}
*
scope.range {(datelogo)|end}
global_temp_3.modify {set|'config_site_id'}
global_temp_1.scrub {multi ()|<ul id="kanali">|<li>|<img|</ul>} 
index_temp_2.modify {set|0}
loop {(each 'index_temp_6' in 'global_temp_1' max=5000)|end}
index_temp_2.modify 	{calculate(format=F0)|1 +}
global_temp_4.modify 	{addend('index_temp_6' ~ 'global_temp_3')|,'index_temp_2'}
end_loop
global_temp_4.modify 	{substring ( type=char)|1 100}
end_scope
index_showsplit.scrub {multi(includeblock='global_temp_4' include="onclick=")|<ul class="program"|<li |</li>|</ul>}

scope.range{(splitindex)|end}
index_temp_1.modify {substring(type=regex)|'index_showsplit' "<p class=\"arial10\">(\d{2}:\d{2})<\/p>"}
index_temp_1.modify {cleanup(removeduplicates span=1 link="index_showsplit")}
*index_showsplit.modify {debug)} *for debug
end_scope
*
index_start.scrub {single|<p class="arial10">||</p>|</p>}
index_title.scrub {single ()|<p class="naslov">||</p>|</p>}
index_category.scrub {single|</p><p class="arial10">||</p>|</p>}
*
index_temp_1.modify {calculate (format=date,"yyyyMMdd")|'showdate'}
index_temp_2.scrub {single ()|show('||')|')}
index_urlshow.modify {set('index_temp_2' not "")|https://www.hteronet.ba/templates/epg-details.view.asp?sid='index_temp_2'&d='index_temp_1'}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
*
scope.range{(showdetails)|end}
title.scrub {single|<p style="color:#adadad;|">|</}
description.scrub {multi|class="kratki_sadrzaj"|<p>|</p>|</div>}
director.scrub {multi (separator=",")|class="kratki_sadrzaj"|Redatelj:|Uloge|</p>}
director.modify {cleanup}
director.modify {remove|Redatelj}
temp_1.modify {addstart|'director'}
temp_1.modify {replace|\||, }
actor.scrub {multi (separator=",")|class="kratki_sadrzaj"|Uloge:|</p>}
actor.modify {cleanup}
temp_2.modify {addstart|'actor'}
temp_2.modify {replace|\||, }
description.modify {remove ()|'temp_1'}
description.modify {remove ('temp_1' not "")|Redatelj:}
description.modify {remove ()|'temp_2'}
description.modify {remove ('temp_2' not "")|Uloge:}
country.scrub {single(separator=", " include=3)|class="kratki_sadrzaj"|<p>(|)|</p>}
episode.scrub {multi(separator=", " include="Epizoda")|class="kratki_sadrzaj"|<p>(|)|</p>}
temp_3.scrub {multi(separator=", " include="Sezona")|class="kratki_sadrzaj"|<p>(|)|</p>}
episode.modify {addstart|'temp_3'}
episode.modify {replace|Sezona|S}
episode.modify {replace|Epizoda|E}
episode.modify {remove| }
description.modify {remove(type=regex)|^\([^,]*,[^,]*,[^,\)]*(?:,[^\)]*)?\)\s}
subtitle.modify {substring(type=regex)|'description' "^-\s(.*?)\s-\s"}
description.modify {remove(type=regex)|^\s*-\s.*?\s-\s}
productiondate.scrub {single(separator=", ")|class="kratki_sadrzaj"|<p>(|)|</p>}
*showicon.scrub {single|<div style="background:|<img src="|"|;">}
*showicon.modify {addstart(not "")|http://www.hteronet.ba}
*
index_category.modify {cleanup(style=name)}
category.modify {cleanup(style=name)}
description.modify {cleanup}
end_scope
*
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*index_site_id.scrub {multi|<ul id="kanali">|<li>|<img|</ul>}
*index_site_channel.scrub {multi|<ul id="kanali">|<li>|<img|</ul>}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="*index_site_channel")}
** @auto_xml_channel_end
