**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: hbo.hr
* @MinSWversion: V2
* @Revision 0 - [28/02/2020] doglover
*   creation 
* @Remarks:
*   none
* @header_end
**------------------------------------------------------------------------------------------------
site {url=hbo.hr|timezone=Europe/Zagreb|maxdays=6|cultureinfo=hr-HR|charset=UTF-8|titlematchfactor=90|allowlastdayoverflow}
site {keepindexpage|retry=<retry time-out="10">3</retry>}
url_index{url()|https://www.hbo.hr/schedule/vertical_view/|urldate|}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
urldate.format {datestring|MM/dd}
*
index_variable_element.modify {set|class="logo 'config_site_id'"}
index_showsplit.scrub {multi ( includeblock='index_variable_element' include="<span class=\"time\">")|<div class="channel">|<a href|</a>|}
index_start.scrub {single ()|<span class="time">||</span>|</span>}
index_title.scrub {single ()|<span class="title">||</span>|</span>}
index_title.modify {cleanup}
index_subtitle.modify {cleanup}

index_urlshow {url ()||gourl___||"|>}
index_urlshow.headers {customheader=Accept-Language=nl,en-US;q=0.7,en;q=0.3}
index_urlshow.headers {customheader=Accept-Encoding=gzip, deflate, br}
index_urlshow.headers {customheader=Upgrade-Insecure-Requests=1}
title.modify {addstart|'index_title'}
titleoriginal.scrub {single ()|<span class="original-title">||</span>}
titleoriginal.modify {cleanup(tags="<"">")}
titleoriginal.modify {cleanup}
category.scrub {multi (separator="," include=first2)|<span class="original-title">|<span class="separator">\|</span>|<span}
category.modify {cleanup(tags="<"">")}
category.modify {cleanup}
category.modify {replace|\||, }
productiondate.scrub {single|"dateCreated": "||",|",}
country.scrub {multi|"countryOfOrigin":|"name": "|"|}}
country.modify {cleanup}
country.modify {replace|\||, }
rating.scrub {single|"contentRating": "||",|",}
director.scrub {multi () |"director":|"name": "|"|]}
actor.scrub {multi () |"actor":|"name": "|"|]}
episode.scrub {single (separator="/" include="sezona")|<link rel="canonical"||">|">}
temp_6.scrub {single (separator="/" include="epizoda")|<link rel="canonical"||">|">}
episode.modify {remove|-sezona}
temp_6.modify {remove|-epizoda}

description.scrub {multi ()|"episodeNumber": "'temp_6'","description": "||",|",}
description.scrub {multi ()|<script type="application/ld+json">{|"description": "|",|}}
description.modify {cleanup (removeduplicates)}
description.modify {replace|\||\n}

episode.modify {addstart ('episode' not "")|S}
temp_6.modify {addstart ('temp_6' not "")|E}
episode.modify {addend ('temp_6' not "")|'temp_6'}
*
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*index_site_id.scrub {multi|<div class="channel">|class="logo |"|</div>}
*index_site_channel.modify {addstart|'index_site_id'}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
** @auto_xml_channel_end
