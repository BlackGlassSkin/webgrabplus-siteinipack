**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: tvtv.de
* @MinSWversion: V2
* @Revision 15 - [04/011/2019] doglover
*   - rewrite 
* @Revision 14 - [03/11/2019] uragan1987
*   - rewrite mainpage
* @Revision 13 - [18/08/2018] Blackbear199
*   - subtitle improvements
* @Revision 12 - [29/07/2018] Blackbear199
*   - rewrite
* @Revision 11 - [31/12/2017] Blackbear199
*   - showsplit change
* @Revision 10 - [24/08/2017] Blackbear199
*   - add role argument,added multi episode info
* @Revision 9 - [19/02/2015] Francis De Paemeleere
*   - add region selectable channels (+ revert to xmltv_ns version)
* @Revision 8 - [14/08/2014] Jan van Straaten
*   - added removeduplicates from showsplit, customheaders, timezone
* @Revision 7 - [21/06/2013] Jan van Straaten
*	- improved episode and subtitle
* @Revision 6 - [05/04/2013] Jan van Straaten
*	- for three weeks of epg
* @Revision 5 - [02/03/2013] Jan van Straaten
*	- creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=tvtv.de|timezone=GMT|maxdays=7.1|cultureinfo=de-DE|charset=UTF-8|titlematchfactor=90|allowlastdayoverflow}
url_index{url ()|http://192.168.178.30/tvtv_de.php?reqtype=1&channel=|channel|}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
*
*index_urlchannellogo.modify {set|https://www.tvtv.de/images/senderlogos/'global_temp_1'.svg}
*
index_showsplit.scrub {multi ()|<div class="Vormittag list-col ">|<div class="list-item sendung" ||<!-- Banner -->}
index_showsplit.modify {cleanup}
scope.range {(splitindex)|end}
index_temp_1.modify {substring(type=regex)|'index_showsplit' data-start="\d{10}} 
index_temp_1.modify {cleanup(removeduplicates link="index_showsplit")}
index_showsplit.modify {sort(ascending,string)}
sort_by.scrub {single(target="index_showsplit")|data-start="||"}}
sort_by.modify {calculate(target="index_showsplit" format=date,unix)}
end_scope
*
index_urlshow {url|http://192.168.178.30/tvtv_de.php?reqtype=2&idx=|<div class="second">|href="|"|onClick}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
*
*index_title.scrub {regex||title=\"mehr zu \"(.+)\"\"||}
index_title.scrub {single|title="mehr zu|">|<|</div>}
*index_subtitle.scrub {single|<div class="third">||</div>|</div>}
*index_subtitle.modify {cleanup(tags="<"">")}
index_start.scrub {regex||data-start="(\d{10})||}
index_stop.scrub {regex||data-end="(\d{10})||}
*
title.modify {addstart|'index_title'}
*subtitle.scrub {multi( separator="," include=first exclude="Folge""Staffel")|</h1>|<li>|</li>|</ul>} * German subtile
subtitle.scrub {multi( separator=","":" include=last exclude="Folge""Staffel")|</h1>|<li>|</li>|</ul>} * English subtitle
subtitle.modify {replace|\||, }
titleoriginal.scrub {multi( separator="," include=last exclude="Folge""Staffel")|</h1>|<li>|</li>|</ul>}
titleoriginal.modify {replace|\||, }

episode.scrub {multi( separator="," include="Folge""Staffel")|</h1>|<li>|</li>|</ul>}
episode.modify {replace|\|| }
episode.modify {remove | }
episode.modify {replace|Folge|E}
episode.modify {replace|von|/}
episode.modify {replace|Staffel| S}

description.scrub {multi|<p class="beschreibung|">|</p>|</p>}
category.scrub {single(separator="," exclude=last)|<li class="genre_sparte">||</li>|</li>}
director.scrub {regex||\s*Regie[^<]*</td>[^<]*<td>(?:.*?)(?:(?:[^<]*<a[^>]*>)?([^<]*)(?:</a>)?[^<]*(?:<br />\|</td>)(?:.*?))*</tr>||}
producer.scrub {regex||\s*Produktion[^<]*</td>[^<]*<td>(?:.*?)(?:(?:[^<]*<a[^>]*>)?([^<]*)(?:</a>)?[^<]*(?:<br />\|</td>)(?:.*?))*</tr>||}
actor.scrub {regex||\s*Darsteller[^<]*</td>[^<]*<td>(?:.*?)(?:(?:[^<]*<a[^>]*>)?([^<]*(?:</a>)?[^<]*)(?:<br />\|</td>)(?:.*?))*</tr>||}
writer.scrub {regex||\s*Drehbuch[^<]*</td>[^<]*<td>(?:.*?)(?:(?:[^<]*<a[^>]*>)?([^<]*)(?:</a>)?[^<]*(?:<br />\|</td>)(?:.*?))*</tr>||}
composer.scrub {regex||\s*Musik[^<]*</td>[^<]*<td>(?:.*?)(?:(?:[^<]*<a[^>]*>)?([^<]*)(?:</a>)?[^<]*(?:<br />\|</td>)(?:.*?))*</tr>||}
presenter.scrub {regex||\s*(?:Mit\|Moderation)[^<]*</td>[^<]*<td>(?:.*?)(?:[^<]*<a[^>]*>([^<]*)(?:</a>)?[^<]*(?:<br />\|</td>)(?:.*?))*</tr>||}
rating.scrub {multi(include="FSK:")|<div id="icons">|title="|"|</div>}
ratingicon.scrub {multi(include="fsk")|<div id="icons">|src="|"|</div>}
starrating.scrub {single(separator="/" include=first)|Redaktionsbewertung|</span>|</td>|</tr>}
country.scrub {single(separator="," include=last)|<li class="genre_sparte">||</li>|</li>}
*showicon.scrub {single|<div id="bild">|src="|"|</div>}
*
actor.modify {replace|</a> |}
producer.modify {replace| / |\|}
producer.modify {replace|- und |\|}
rating.modify {remove|FSK: }
rating.modify {addend(not "")|+}
starrating.modify {calculate(not "" format=F1)}
productiondate.modify {substring('country' not "" type=regex)|'country' "\d{4}$"}
country.modify {remove('productiondate' not "")| 'productiondate'}

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
** Be patient - this can take 10 - 15 minutes
** @auto_xml_channel_start
*index_site_id.scrub {multi ()|<div class="channel-item"|data-channel="|"|</li>}
*index_site_channel.scrub {multi|<div class="channel-item"|<div class="title">|</div>|</li>}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
** @auto_xml_channel_end




