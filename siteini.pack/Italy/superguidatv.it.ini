**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: superguidatv.it
* @MinSWversion: 2
* @Revision 2 - [13/06/2019] Indil
*  - fixed desc. not availables & desc. equals titles
* @Revision 1 - [10/06/2019] Indil
*  - added index_title/index_category/description/actors/roles. Minor behaviour fixes
* @Revision 0 - [17/05/2018] doglover
*  - creation
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
*
*
site {url=superguidatv.it|timezone=Europe/Rome|maxdays=3|cultureinfo=it-IT|charset=UTF-8|titlematchfactor=90|episodesystem=onscreen}
url_index{url ()|https://www.superguidatv.it/programmazione-canale/|urldate|/guida-programmi-tv-|channel|}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
urldate.format {list|oggi|domani|dopodomani{datestring|YYYY-MM-dd|it-IT}}
*
scope.range{(indexshowdetails)|end}
index_date.scrub {single(separator=", " include=last)|<a id="sgtvDateA"|spanDateSelector">|</span>|</a>}
index_showsplit.scrub {regex||<div class="sgtvchannelplan_divTableRow sgtvchannelplan_rowHeight76".+?</a></div>||}
index_urlshow {url||href="||"}

index_start.scrub {single|<div class="sgtvchannelplan_divTableCell sgtvchannelplan_hoursCell"|"> |<br>|</div>}
index_title.scrub {single|<span class="sgtvchannelplan_spanInfoNextSteps">|||</span>|} * match title ignoring parenthesis

* CLEANING UP INDEX_TITLE
index_title.modify {cleanup}
index_title.modify {cleanup(tags="<"">")}
index_title.modify {remove(~ "ep." type=regex)|\s\(.+\)}										* remove (season,episode) from parenthesis (series)
index_title.modify {remove(type=regex)|\s\(\d.+\)}												* remove year from parenthesis (movies)
index_temp_1.modify {set|'index_title'}     													* copy index_title in index_temp_4 (shows)
index_temp_1.modify {remove(type=regex)|(?:\A[a-zA-Z\s]+(\s-.+)(?!)\|\A([a-zA-Z\s]+\s-\s).+)}	* get subtitle part from title (shows)
index_title.modify {remove(type=regex)|\A[a-zA-Z\s]+(\s-.+)}									* get title part only from title (shows)
*
index_subtitle.modify {set('index_temp_1' not== 'index_title')|'index_temp_1'}					* copy index_temp_4 in index_subtitle
index_category.scrub {single|<span class="sgtvchannelplan_spanInfoNextSteps_eventType sgtvchannelplan_spanEventType"|">| (|</span>}
index_temp_1{clear} * reset temp variable
end_scope

scope.range{(showdetails)|end}
title.scrub {single|<span class="td-bred-no-url-last">|||</span>|} * match title ignoring parenthesis

* CLEANING UP TITLE
title.modify {cleanup}
title.modify {cleanup(tags="<"">")}
title.modify {remove(~ "ep." type=regex)|\s\(.+\)}										* remove (season,episode) from parenthesis (series)
temp_4.modify {set|'title'}																* copy title in index_temp_4 (shows)
temp_4.modify {remove(type=regex)|(?:\A[a-zA-Z\s]+(\s-.+)(?!)\|\A([a-zA-Z\s]+\s-\s).+)}	* get subtitle part from title (shows)
title.modify {remove(type=regex)|\A[a-zA-Z\s]+(\s-.+)}									* get title part only from title (shows)

subtitle.scrub {single|<h2 class="sgtvdetails_divHeaderText">Trama Episodio: ||</h2>}	* ToDo scrub for not series
subtitle.modify {set('temp_4' not== 'title')|'temp_4'}									* copy temp_4 in subtitle

description.scrub {multi(~ "episodio" exclude=first)|<div class="sgtvdetails_divRowContent sgtvdetails_tableLayoutFixed"|<h2 class="sgtvdetails_divHeaderText">||</div></div>}
description.modify {remove(~ "episodio" type=regex)|(.+)</h2>}
description.scrub {single(not ~ "episodio")|<div class="sgtvdetails_divRowContent sgtvdetails_tableLayoutFixed"|<h2 class="sgtvdetails_divHeaderText">||</div></div>}
description.modify {remove(not ~ "episodio" type=regex)|(.+)</h2>}

description.modify {cleanup(tags="<"">")}
description.modify {replace|</div>|}

description.modify {clear(~ "descrizione evento non disponibile")}				* remove not available descriptions
temp_5.modify {set|'description'}
temp_5.modify {replace|\||}
description.modify {clear('title''temp_5')}										* remove descriptions equal to titles

temp_1.scrub {single|<h3 class="sgtvdetails_displaySeasonEpisodeH3">||</h3>|}	* get season, episode
episode.modify {set(pattern="Stagione'S1'-Ep.'E1'""Episodio'E1'")|'temp_1'}
temp_1.modify{clear}															* reset temp_1


actor.scrub {multi|<div class="sgtvdetails_divActorContainer">|alt="|">|</span></div>}


temp_3.modify {set|'actor'}		* copy the actor value in temp_3
actor.modify{clear}

loop {(each 'temp_1' in 'temp_3' max=20)|end}
temp_2.modify {substring(type=regex)|'temp_1' "interpreta\s(.+?)\Z"}	* get rolevalue
temp_2.modify {set('temp_2' not "")|(role='temp_2')}					* add attribute syntax to temp_2
temp_1.modify {remove(type=regex)|"(\sinterpreta\s.+?\Z)"}				* remove role part (get actorvalue)
actor.modify {set|'actor'\|'temp_1''temp_2'}							* set actor xmltv
end_loop

* RESET TEMPS VARIABLES
temp_1{clear}
temp_2{clear}
temp_3{clear}
temp_4{clear}

end_scope

**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index{url ()|https://www.superguidatv.it/canali/|subpage|}
*subpage.format {list||premium|sky-intrattenimento|sky-sport|sky-cinema|sky-doc-e-lifestyle|sky-news|sky-bambini|sky-musica|sky-primafila|rsi}
*index_site_id.scrub {multi|<div class="sgtvchannellist_mainContainer">|programmazione-canale/oggi/guida-programmi-|">|>/div>}
*index_site_channel.scrub {multi|<div class="sgtvchannellist_mainContainer">|<img class="imgchannellogo" alt="|"|>/div>}}
** @auto_xml_channel_end
