**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: mag.sapo.pt
* @MinSWversion: V2
* @Revision 4 - [05/12/2019] doglover
*   Website change
* @Revision 3 - [26/03/2019] doglover
*   fixed description
* @Revision 2 - [12/10/2016] Blackbear199
*   Site changes
* @Revision 1 - [29/02/2016] Blackbear199
*   Site change - rewrite
* @Revision 0 - [08/09/2013] Mario Lima
*   Site change - No subpages, all data available on index pages.
* @Remarks:
* @header_end
**------------------------------------------------------------------------------------------------
site {url=mag.sapo.pt|timezone=Europe/Lisbon|maxdays=7.1|cultureinfo=pt-PT|charset=UTF-8|firstshow=now}
url_index{url ()|https://www.meo.pt/_layouts/15/Ptsi.Isites.GridTv/GridTvMng.asmx/getProgramsFromChannels}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
urldate.format {datestring|yyyy-MM-dd}

scope.range{(urlindex)|end}
index_variable_element.modify {calculate(format=date,"yyyy-MM-dd")|'urldate' 07:00 +}
url_index.headers {method=POST}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
url_index.headers {contenttype=application/json; charset=utf-8}
url_index.headers {accept=application/json, text/javascript, */*; q=0.01}
url_index.headers {customheader=X-Requested-With=XMLHttpRequest}
url_index.headers {postdata={"service":"channelsguide","channels":["'channel'"],"dateStart":"'urldate'T00:00:00.000Z","dateEnd":"'index_variable_element'T23:00:00.000Z","accountID":""}}
end_scope
*
index_showsplit.scrub {multi ()|"programs":[|"ExtensionData"||],}
scope.range{(splitindex)|end}
index_temp_1.modify {substring(type=regex)|'index_showsplit' "(\"date\":\"\d{1,2}-\d{1,2}-\d{4}\",\"timeIni\":\"\d{2}:\d{2}\",)"}
index_temp_1.modify {cleanup(removeduplicates link="index_showsplit")}
end_scope
*
index_start.scrub {regex||"date":"(\d{1,2}-\d{1,2}-\d{4}","timeIni":"\d{2}:\d{2})",||}
index_start.modify {replace|","timeIni":"| }

index_stop.scrub {single|"timeEnd":"||"|"}
index_title.scrub {single|"name":"||"|"}
index_episode.modify {substring(type=regex)|'index_title' "T\d+\s-\sEp\.\s\d+"}
index_title.modify {remove('index_episode' not "")|'index_episode'}
index_title.modify {cleanup}
index_episode.modify {replace(not "")| - | }
index_episode.modify {replace(not "")|T|S}
index_episode.modify {replace(not "")|Ep.|E}
index_episode.modify {remove | }
*
index_temp_1.scrub {single|"uniqueId":"||",|",}
index_urlshow.modify {addstart('index_temp_1' not "")|https://www.meo.pt/_layouts/15/Ptsi.Isites.GridTv/GridTvMng.asmx/getProgramDetails}
index_urlshow.headers {method=POST}
index_urlshow.headers {customheader=Accept-Encoding=gzip,deflate}
index_urlshow.headers {contenttype=application/json}
index_urlshow.headers {postdata={"service":"programdetail","programID":"'index_temp_1'","accountID":""}}

description.scrub {single|"description":"||",|",}
*showicon.scrub {single|"progImageM":"||",|",}
title.modify {addstart |'index_title'}
description.modify {cleanup(style=jsondecode)}
description.modify {cleanup}
*
**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index{url|https://www.meo.pt/_layouts/15/Ptsi.Isites.GridTv/GridTvMng.asmx/getGridAnon}
*url_index.headers {postdata={"service":"allchannels"}}
*index_site_id.scrub {multi(exclude="null")|{"__type":"Ptsi.Isites.GridTv.CanaisService.Channels"|"sigla":"|",|"url":}
*index_site_channel.scrub {multi(excludeblock="\"sigla\":null,")|{"__type":"Ptsi.Isites.GridTv.CanaisService.Channels"|"name":"|",|"url":}
** @auto_xml_channel_end
