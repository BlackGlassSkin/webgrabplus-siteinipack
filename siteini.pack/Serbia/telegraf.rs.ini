**------------------------------------------------------------------------------------------------
* @header_start
* WebGrab+Plus ini for grabbing EPG data from TvGuide websites
* @Site: telegraf.rs
* @MinSWversion: V2.1
* @Revision 0 - [09/01/2020] doglover
* @Remarks:
*   none
* @header_end
**------------------------------------------------------------------------------------------------
site {url=telegraf.rs|timezone=UTC|maxdays=6|cultureinfo=sr|charset=UTF-8|titlematchfactor=90|}
*url_index{url ()|https://www.telegraf.rs/api/epg/channels/|channel|?start=##start##&end=##end##}
url_index{url ()|http://192.168.178.30/telegraf_rs.php?channel=|channel|&start=##start##&end=##end##}
url_index.headers {customheader=Accept-Encoding=gzip,deflate}
urldate.format {datenumber|unix|0}
scope.range{(urlindex)|end}
index_temp_1.modify {calculate(format=date,unix)|'urldate' 00:03 +}
url_index.modify {replace|##start##|'index_temp_1'}
index_temp_2.modify {calculate(format=date,unix)|'index_temp_1' 01:00 +}
url_index.modify {replace|##end##|'index_temp_2'}
end_scope
index_showsplit.scrub {multi () |{"meta":|||}

scope.range {(splitindex)|end}
index_temp_1.modify {substring(type=regex)|'index_showsplit' "date_start":\d{10},"} 
index_temp_1.modify {cleanup(removeduplicates span=2 link="index_showsplit")}
end_scope

index_start.scrub {single ()|"date_start":||,|}
index_stop.scrub {single ()|"date_end":||,|}
index_title.scrub {single|"title":"||",|}
index_titleoriginal.scrub {single|"originalTitle":"||"|}
index_titleoriginal.modify {clear ( 'index_titleoriginal' = 'index_title')}
index_title.modify {remove |\}
index_titleoriginal.modify {remove |\}
*subtitle.scrub {single ()|"seriesInfo":|"episodeName":"|",|}
index_description.scrub {multi ()|"desc":"||","|}
index_description.modify {replace |\\n|##BR##}
index_description.modify {replace |\\r|##BR##}
index_description.modify {cleanup}
index_description.modify {remove |\}
index_description.modify {replace |##BR####BR##|##BR##}
index_description.modify {replace |##BR##|\n}
index_director.scrub {multi (separator=",")|"directors":[||]}
index_actor.scrub {multi (separator=",")|"actors":[||]}
index_director.modify {remove|"}
index_actor.modify {remove|"}
index_category.scrub {multi (separator=",")|"genre":[||]}
index_category.modify {remove|"}
index_productiondate.scrub {single|"year":||,"|
index_country.scrub {multi|"countries":[|"|"|]}

index_episode.scrub {single ()|"episode":||,"|"}
index_episode.modify {addstart ('index_episode' not "")|E}
index_temp_4.scrub {single |"season":||,}
index_temp_4.modify {remove|}}
index_temp_4.modify {addstart ('index_temp_4' not "")|S}
index_episode.modify {addstart ('index_temp_4' not "")|'index_temp_4'}


**  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _  _
**      #####  CHANNEL FILE CREATION (only to create the xxx-channel.xml file)
**
** @auto_xml_channel_start
*url_index{url ()|https://www.telegraf.rs/api/epg/channels}
*index_site_id.scrub {multi (includeblock="logo")|"_id":"||",|"group"}
*index_site_channel.scrub {multi (includeblock="logo")|"_id":"|"name":"|",|"group"}
*index_site_channel.modify {cleanup}
*index_site_id.modify {cleanup(removeduplicates=equal,100 link="index_site_channel")}
*end_scope
** @auto_xml_channel_end
